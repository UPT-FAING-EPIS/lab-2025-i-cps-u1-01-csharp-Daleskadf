name: SonarQube & Publish NuGet Package

on:
  push:
    branches:
      - main  # Cambia si usas otra rama principal

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verificar estructura del repositorio
        run: ls -R  # Lista toda la estructura para depuraci√≥n

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  

      - name: Restore dependencies
        run: dotnet restore Bank/Bank.Domain/Bank.Domain.csproj

      - name: Build and Pack
        run: |
          cd Bank/Bank.Domain  # Entra al directorio del proyecto
          ls -R  # Verifica que los archivos existen
          dotnet build Bank.Domain.csproj --configuration Release
          dotnet pack Bank.Domain.csproj --configuration Release --output ./nupkg
          ls -R ./nupkg  # Verifica que el paquete .nupkg fue generado

      - name: Publish to GitHub Packages
        env:
          GH_NUGET_TOKEN: ${{ secrets.GH_NUGET_TOKEN }}
        run: |
          dotnet nuget push Bank/Bank.Domain/nupkg/*.nupkg \
            --source "https://nuget.pkg.github.com/Daleskadf/index.json" \
            --api-key "$GH_NUGET_TOKEN" \
            --skip-duplicate

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Daleskadf_Bank" /o:"apibank" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build --configuration Release
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
